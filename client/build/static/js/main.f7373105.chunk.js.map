{"version":3,"sources":["components/Search/Input.js","components/Search/Button.js","components/Search/Search.js","components/Result/Result.js","components/Saved/Saved.js","components/Title/Title.js","utils/api.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","react_default","a","createElement","onChange","handleInputChange","type","className","value","search","Button","onClick","handleButtonClick","Search","onSubmit","handleFormSubmit","Search_Input","Search_Button","Result","result","map","article","key","_id","href","web_url","target","headline","main","pub_date","handleSaveButton","Saved","savedArticles","url","title","date","deleteArticle","Title","api","getData","axios","get","concat","getSavedArticles","saveArticles","console","log","post","id","delete","App","state","start","end","loadArticles","API","then","res","_this","setState","data","catch","err","event","preventDefault","components_Title_Title","components_Search_Search","this","components_Result_Result","components_Saved_Saved","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7373105.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = (props) => {\n  return(\n    <div>\n      <h5>Input</h5>\n      <input onChange={props.handleInputChange} type=\"text\" className=\"form-control\" value={props.search}></input>\n    </div>\n  )\n};\n\nexport default Input;\n\n","import React from \"react\";\n\nconst Button = (props) => {\n  return(\n    <button onClick={props.handleButtonClick} className=\"btn btn-danger btn-lg\">Search</button>\n  )\n};\n\nexport default Button;\n","import React from \"react\";\nimport Input  from \"./Input\";\nimport Button  from \"./Button\";\n\nconst Search = (props) => {\n    return (\n      <div className=\"card bg-light mb-3 container search-box\">\n        <div className=\"card-header\">\n          <h4>Search</h4>\n        </div>\n        <div className=\"card-body\">\n          <form onSubmit={props.handleFormSubmit}>\n            <Input handleInputChange={props.handleInputChange} search={props.search}/>\n            <Button handleButtonClick={props.handleButtonClick}/>\n          </form>\n        </div>\n      </div>\n    )\n  };\n  \n  export default Search;\n  ","import React from \"react\";\nimport \"./Result.css\";\n\n\nconst Result = (props) => {\n  return (\n    <div className=\"card mb-3 container results-box\">\n      <div className=\"card-header\">\n        <h4>Results</h4>\n      </div>\n      <div className=\"card-body\">\n        {props.result.map((article) => {\n          // const image =  article.multimedia[0].url;\n          return (\n            <div key={article._id}>\n              <div className=\"article-display row\">\n                <a href={article.web_url} target=\"_blank\" className=\"col-md-2\"><span>Link for the Article </span></a>\n                \n                <div className=\"col-md-3\">\n                  <h4>Title: {article.headline.main}</h4>\n                </div>\n                <div className=\"col-md-3\">\n                  <h4>Published: {article.pub_date}</h4>\n                </div>\n                <button onClick={() => props.handleSaveButton(article.headline.main, article.web_url, article.pub_date)} className=\"btn btn-sm btn-primary col-md-2\">save</button>\n              </div>\n              <hr/>\n            </div>\n          )\n        }) || <h4>loading...</h4>}\n      </div>\n    </div>\n  )\n};\n\nexport default Result","import React from \"react\";\n\nconst Saved = (props) => {\n  return(\n    <div className=\"card mb-3 container results-box\">\n      <div className=\"card-header\">\n        <h4>Saved Articles</h4>\n      </div>\n      <div className=\"card-body\">\n        {props.savedArticles.map((article) => {\n          return (\n            <div key={article._id}>\n              <div className=\"article-display row\">\n                <a href={article.url} target=\"_blank\" className=\"col-md-4\"></a>\n                <div className=\"col-md-3\">\n                  <h4>Title: {article.title}</h4>\n                </div>\n                <div className=\"col-md-3\">\n                  <h4>Saved Date: {article.date}</h4>\n                </div>\n                <button onClick={() => props.deleteArticle(article._id)} className=\"btn btn-sm btn-danger col-md-2\">delete</button>\n              </div>\n              <hr/>\n            </div>\n          )\n        }) || <h4>loading...</h4>}\n      </div>\n    </div>\n  )\n};\n\nexport default Saved;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = () => {\n  return(\n    <div className=\"jumbotron container\">\n      <h1>New York Times Article Scrubber</h1>\n      <hr/>\n      <h4>search for and save articles of interest!</h4>\n    </div>\n  )\n};\n\nexport default Title;","\nimport axios from \"axios\";\n\nconst URL = \"https://api.nytimes.com/svc/search/v2/articlesearch.json\";\nconst KEY = \"z7pfmv2UV0x9gbdbAvH4sqfZxLe7pQQT\";\n\n\nexport default {\n  // NYT API query\n  getData: function(search) {\n    return axios.get(`/api/nyt/${search}`);\n  },\n  getSavedArticles: function() {\n    return axios.get(\"/api/articles\");\n  },\n  saveArticles: function(article) {\n    console.log(`this is for saving in api.js`);\n    return axios.post(\"/api/articles\", article);\n  },\n  deleteArticle: function(id) {\n    return axios.delete(\"/api/articles/\" + id);\n  }\n};","import React, {Component} from 'react';\nimport Search from \"./components/Search\";\nimport Results from \"./components/Result\";\nimport Saved from \"./components/Saved\";\nimport Title from \"./components/Title\";\nimport API from \"./utils/api\";\n\nclass App extends Component {\n  state = {\n    search: \"\",\n    start: \"\",\n    end: \"\",\n    result: [],\n    savedArticles: []\n  }\n\n  // componentDidMount() {\n  //   this.loadArticles();\n  //  };\n\n  loadArticles = () => {\n    API.getSavedArticles().then((res) => {\n      console.log(`this is response ${res}`)\n      this.setState({savedArticles: res.data});\n    }).catch((err) => {\n      console.log(err);\n    });\n  };\n\n  deleteArticle = (id) => {\n    API.deleteArticle(id).then((res) => {\n      this.loadArticles()\n    }).catch((err) => {\n      console.log(err);\n    });\n  };\n\n  handleSaveButton = (title, url, date) => {\n    API.saveArticles({title, url, date}).then((res) => {\n      this.loadArticles()\n      console.log(\"articles saved\");\n    }).catch((err) => {\n      console.log(err);\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    this.setState({search: \"\"});\n    event.preventDefault();\n  };\n\n  handleInputChange = (event) => {\n    this.setState({search: event.target.value});\n  };\n\n  handleButtonClick = () => {\n    if (this.state.search !== \"\") {\n      API.getData(this.state.search).then((res) => {\n        console.log(res, \"this is results for NY\")\n        this.setState({result: res.data})\n      }).catch((err) => {\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Title/>\n        <Search handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange} handleButtonClick={this.handleButtonClick} search={this.state.search}/>\n        <Results result={this.state.result} handleSaveButton={this.handleSaveButton}/>\n        <Saved savedArticles={this.state.savedArticles} deleteArticle={this.deleteArticle}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}